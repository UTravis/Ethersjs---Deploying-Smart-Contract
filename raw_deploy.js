// DEPLOYING SOLIDITY CONTRACTS USING ETHERJS WITH RAW TRANSACTION

const ethers = require("ethers");
const fs = require("fs-extra");
require('dotenv').config();

async function main(){
    const providers = new ethers.providers.JsonRpcProvider(process.env.RPC_ENDPOINT);
    const wallet = new ethers.Wallet(process.env.PRIVATE_KEY, providers);


    // Building Raw Transaction
    const nonce = await wallet.getTransactionCount();  // Getting nonce
   
    const tx = {
        to: null,
        nonce: nonce,
        data: "0x608060405234801561001057600080fd5b50610c69806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631a3cd59a146100675780632892ed1d146100975780632d2d03a6146100b35780634622ab03146100cf57806350175b3b146100ff57806397ba8e7e1461012f575b600080fd5b610081600480360381019061007c91906107c7565b610162565b60405161008e9190610a16565b60405180910390f35b6100b160048036038101906100ac91906107f4565b6102c7565b005b6100cd60048036038101906100c8919061077e565b610353565b005b6100e960048036038101906100e491906107c7565b610392565b6040516100f691906109a1565b60405180910390f35b610119600480360381019061011491906107c7565b61043e565b60405161012691906109a1565b60405180910390f35b610149600480360381019061014491906107c7565b6104ee565b60405161015994939291906109c3565b60405180910390f35b61016a61062e565b6001600083815260200190815260200160002060405180608001604052908160008201805461019890610b07565b80601f01602080910402602001604051908101604052809291908181526020018280546101c490610b07565b80156102115780601f106101e657610100808354040283529160200191610211565b820191906000526020600020905b8154815290600101906020018083116101f457829003601f168201915b505050505081526020016001820154815260200160028201805461023490610b07565b80601f016020809104026020016040519081016040528092919081815260200182805461026090610b07565b80156102ad5780601f10610282576101008083540402835291602001916102ad565b820191906000526020600020905b81548152906001019060200180831161029057829003601f168201915b505050505081526020016003820154815250509050919050565b604051806080016040528085815260200184815260200183815260200182815250600160008781526020019081526020016000206000820151816000019080519060200190610317929190610656565b5060208201518160010155604082015181600201908051906020019061033e929190610656565b50606082015181600301559050505050505050565b60008190806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061038e929190610656565b5050565b600081815481106103a257600080fd5b9060005260206000200160009150905080546103bd90610b07565b80601f01602080910402602001604051908101604052809291908181526020018280546103e990610b07565b80156104365780601f1061040b57610100808354040283529160200191610436565b820191906000526020600020905b81548152906001019060200180831161041957829003601f168201915b505050505081565b60606000828154811061045457610453610b99565b5b90600052602060002001805461046990610b07565b80601f016020809104026020016040519081016040528092919081815260200182805461049590610b07565b80156104e25780601f106104b7576101008083540402835291602001916104e2565b820191906000526020600020905b8154815290600101906020018083116104c557829003601f168201915b50505050509050919050565b600160205280600052604060002060009150905080600001805461051190610b07565b80601f016020809104026020016040519081016040528092919081815260200182805461053d90610b07565b801561058a5780601f1061055f5761010080835404028352916020019161058a565b820191906000526020600020905b81548152906001019060200180831161056d57829003601f168201915b5050505050908060010154908060020180546105a590610b07565b80601f01602080910402602001604051908101604052809291908181526020018280546105d190610b07565b801561061e5780601f106105f35761010080835404028352916020019161061e565b820191906000526020600020905b81548152906001019060200180831161060157829003601f168201915b5050505050908060030154905084565b6040518060800160405280606081526020016000815260200160608152602001600081525090565b82805461066290610b07565b90600052602060002090601f01602090048101928261068457600085556106cb565b82601f1061069d57805160ff19168380011785556106cb565b828001600101855582156106cb579182015b828111156106ca5782518255916020019190600101906106af565b5b5090506106d891906106dc565b5090565b5b808211156106f55760008160009055506001016106dd565b5090565b600061070c61070784610a5d565b610a38565b90508281526020810184848401111561072857610727610bfc565b5b610733848285610ac5565b509392505050565b600082601f8301126107505761074f610bf7565b5b81356107608482602086016106f9565b91505092915050565b60008135905061077881610c1c565b92915050565b60006020828403121561079457610793610c06565b5b600082013567ffffffffffffffff8111156107b2576107b1610c01565b5b6107be8482850161073b565b91505092915050565b6000602082840312156107dd576107dc610c06565b5b60006107eb84828501610769565b91505092915050565b600080600080600060a086880312156108105761080f610c06565b5b600061081e88828901610769565b955050602086013567ffffffffffffffff81111561083f5761083e610c01565b5b61084b8882890161073b565b945050604061085c88828901610769565b935050606086013567ffffffffffffffff81111561087d5761087c610c01565b5b6108898882890161073b565b925050608061089a88828901610769565b9150509295509295909350565b60006108b282610a8e565b6108bc8185610a99565b93506108cc818560208601610ad4565b6108d581610c0b565b840191505092915050565b60006108eb82610a8e565b6108f58185610aaa565b9350610905818560208601610ad4565b61090e81610c0b565b840191505092915050565b6000608083016000830151848203600086015261093682826108a7565b915050602083015161094b6020860182610983565b506040830151848203604086015261096382826108a7565b91505060608301516109786060860182610983565b508091505092915050565b61098c81610abb565b82525050565b61099b81610abb565b82525050565b600060208201905081810360008301526109bb81846108e0565b905092915050565b600060808201905081810360008301526109dd81876108e0565b90506109ec6020830186610992565b81810360408301526109fe81856108e0565b9050610a0d6060830184610992565b95945050505050565b60006020820190508181036000830152610a308184610919565b905092915050565b6000610a42610a53565b9050610a4e8282610b39565b919050565b6000604051905090565b600067ffffffffffffffff821115610a7857610a77610bc8565b5b610a8182610c0b565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000819050919050565b82818337600083830152505050565b60005b83811015610af2578082015181840152602081019050610ad7565b83811115610b01576000848401525b50505050565b60006002820490506001821680610b1f57607f821691505b60208210811415610b3357610b32610b6a565b5b50919050565b610b4282610c0b565b810181811067ffffffffffffffff82111715610b6157610b60610bc8565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610c2581610abb565b8114610c3057600080fd5b5056fea264697066735822122045b2d8e890f0adba40504dd84a06829b28856159301a6705193109c11691f34364736f6c63430008070033",
        value: 0,
        gasLimit: 1000000,
        gasPrice: 20000000000,
        chainId: 1337
    }

    // Signing and sending transaction
    const transaction = await wallet.sendTransaction(tx);
    const txResponse = await transaction.wait(1);
    console.log(txResponse);
}

main()

